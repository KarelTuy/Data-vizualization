import { SvelteComponentTyped } from "svelte";
import type { BarChartRaceData, BarChartRaceOptions } from "./shared";
declare const __propDef: {
    props: {
        data?: BarChartRaceData;
        options?: BarChartRaceOptions;
        /** Specify the animation interval in milliseconds (ms). */ interval?: number;
        /**
           * Set the current value.
           * `null` denotes "no value."
           *
           * If set to `null`, the Slider input will reset to the minimum value.
           * @example bind:currentValue
           */ currentValue?: null | number;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {
            currentValue: number;
            isPlaying: boolean;
            setMax: () => void;
            setMin: () => void;
            setValue: (value: number) => void;
            play: () => void;
            pause: () => void;
        };
    };
};
export type BarChartRaceProps = typeof __propDef.props;
export type BarChartRaceEvents = typeof __propDef.events;
export type BarChartRaceSlots = typeof __propDef.slots;
export default class BarChartRace extends SvelteComponentTyped<BarChartRaceProps, BarChartRaceEvents, BarChartRaceSlots> {
}
export {};
